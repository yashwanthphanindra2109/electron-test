import { ImageStyle, StyleProp, TextStyle, ViewStyle } from "react-native";

// Authentication

export interface LoginProps {
  email: string;
  password: string;
}

export interface CardProps {
  title: string;
  value: string;
  subText: string;
  icon: string;
  iconType: string;
  iconBackground: string;
  style?: StyleProp<ViewStyle>;
}

export interface TableConfig {
  title: string;
  sort?: boolean;
  alignItems?: "flex-start" | "flex-end" | "center" | "stretch" | "baseline";
  width?: number;
  headStyle?: StyleProp<ViewStyle>;
  headTextStyle?: StyleProp<TextStyle>;
  rowStyle?: StyleProp<ViewStyle>;
  cellStyle?: StyleProp<TextStyle & ImageStyle>;
  componentType?: string;
  viewKey?: string;
  editKey?: string;
  deleteKey?: string;
}
export interface TableAction {
  title: string;
  sort?: boolean;
  alignItems?: "flex-start" | "flex-end" | "center" | "stretch" | "baseline";
  width?: number;
  headStyle?: StyleProp<ViewStyle>;
  headTextStyle?: StyleProp<TextStyle>;
  rowStyle?: StyleProp<ViewStyle>;
  cellStyle?: StyleProp<TextStyle & ImageStyle>;
  componentType?: string;
  viewKey?: string;
  editKey?: string;
  deleteKey?: string;
}
export interface ResponseType {
  content: Array<object>;
  order_by?: "asc" | "desc";
  order_by_item?: string;
  search_text?: string;
  page_number?: string | number;
  page_limit?: string | number;
}

export interface ReduxType {
  type?: string;
  payload?: any;
}
// Generated by https://quicktype.io
// Generated by https://quicktype.io
export interface Order {
  orderBy?: string;
  orderByItem?: string;
}
export interface StoreInfoType {
  store_name: string;
  phone: string;
  email: string;
  first_name: string;
  last_name: string;
  password?: string;
  store_desc?: string;
  address?: string;
  store_rating?: string;
  store_timings?: string;
  store_image?: string;
  store_lat?: string;
  store_lng?: string;
  owner_photo?: string;
  city?: string;
  state?: string;
  active_status?: string;
  pickupflag?: boolean;
  deliveryflag?: boolean;
  facebook?: string;
  instagram?: string;
  twitter?: string;
  pinterest?: string;
  account_number?: string;
  account_name?: string;
  expiry_date?: string;
}
export interface modalOptions {
  title: string;
  controlType: "text" | "select" | "number" | "hidden" | "boolean" | "date";
  options?: Array<{ displayName: string; id: string | number }>;
  displayKey?: string;
  onChange?: {
    function: (args?: any) => void;
    args: Array<string>;
  };
  required?: boolean;
  requiredMessage?: string;
  isEditable?: boolean;
  pattern?: string;
  patternMessage?: string;
  maxlength?: number;
  placeholder?: string;
  customValidationFunctions?: [
    {
      function: () => void;
      errorName: string;
    }
  ];
  role?: Array<string>;
  datePickerOptions?: {
    dateFormat: "DD/MM/YYYY" | "DD/MM/YYYY HH:mm";
  };
}
export interface modalConfig {
  [x: string]: modalOptions;
}

export interface customObj {
  componentType:
    | "text"
    | "image"
    | "view"
    | "imagebackground"
    | "flatlist"
    | "scrollview"
    | "textinput"
    | "table";
  className?: string;
  value?: any;
  children?: Array<customObj> | customObj;
  config?: any;
  style?:
    | StyleProp<ViewStyle | TextStyle>
    | Array<StyleProp<ViewStyle | TextStyle>>;
  imageStyle?: StyleProp<ImageStyle> | Array<StyleProp<ImageStyle>>;
  InnerComponent?: React.FC;
}
